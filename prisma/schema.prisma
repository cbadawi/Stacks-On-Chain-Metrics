generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DASHBOARD_DB_URL")
  schemas  = ["public", "dash"]
}

enum ChartType {
  TABLE
  LINE
  BAR
  PIE
  TREEMAP
  NUMBER

  @@schema("dash")
}

enum LeftRight {
  LEFT
  RIGHT

  @@schema("dash")
}

enum CustomizableChartTypes {
  LINE
  BAR

  @@schema("dash")
}

enum Tags {
  Stacks
  Babo
  NFT
  Meme
  PoX
  DEFI
  sBTC
  Mempool
  Ordinals
  Mining

  @@schema("dash")
}

//  usd price
model TokenPrice {
  id        Int      @id @default(autoincrement())
  price     Float     @default(0)

  createdAt  DateTime    @default(now()) @map("created_at")
  @@schema("dash")
}

model Owner {
  id         Int         @id @default(autoincrement())
  address    String      @unique
  name       String?
  tokens     Int         @default(0) // tokens already used by the user
  dashboards Dashboard[]
  createdAt  DateTime    @default(now()) @map("created_at")
  updatedAt  DateTime    @updatedAt @map("updated_at")

  @@index([address], map: "USER_ADDRESS")
  @@map("owner")
  @@schema("dash")
}

model Dashboard {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  private     Boolean  @default(false)
  owner       Owner    @relation(fields: [ownerId], references: [id])
  ownerId     Int      @map("owner_id")
  deleted     Boolean  @default(false)
  charts      Chart[]
  tags        Tag[]
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@unique([deleted, title])
  @@index([deleted, title], map: "DASH_TITLE")
  @@map("dashboards")
  @@schema("dash")
}

model Chart {
  id          Int                      @id @default(autoincrement())
  title       String
  query       String
  type        ChartType
  description String?
  x           Int
  y           Int
  width       Int
  height      Int
  deleted     Boolean                  @default(false)
  variables   Json
  dashboard   Dashboard?               @relation(fields: [dashboardId], references: [id], onDelete: SetNull)
  dashboardId Int?                      @map("dashboard_id")
  axesTypes   LeftRight[]              @map("axes_types")
  columnTypes CustomizableChartTypes[] @map("column_types")
  createdAt   DateTime                 @default(now()) @map("created_at")
  updatedAt   DateTime                 @updatedAt @map("updated_at")

  @@index([deleted, dashboardId], map: "CHART_DASHBOARD_ID")
  @@map("charts")
  @@schema("dash")
}

model Tag {
  id          Int       @id @default(autoincrement())
  name        Tags
  dashboard   Dashboard @relation(fields: [dashboardId], references: [id])
  dashboardId Int       @map("dashboard_id")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  @@map("tags")
  @@schema("dash")
}
